% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_conditional_inferences.R
\name{conditional_inferences}
\alias{conditional_inferences}
\title{Conditional inferences}
\usage{
conditional_inferences(
  model,
  query,
  parameters = NULL,
  given = NULL,
  using = "parameters",
  case_level = FALSE
)
}
\arguments{
\item{model}{A \code{causal_model}. A model object generated by \code{\link[CausalQueries]{make_model}}}

\item{query}{A character string. An expression defining nodal types to interrogate \code{\link[CausalQueries]{reveal_outcomes}}}

\item{parameters}{A vector of real numbers in [0,1]. Values of parameters to specify (optional). By default, parameters is drawn from \code{model$parameters_df}}

\item{given}{A conditioning set as a character string that evaluates to a logical, for example 'Y==1'}
}
\description{
Calculate estimands conditional on observed data (currently, for single-case process tracing) together with data realization probabilities
Realization probabilities are the probability of the observed data given data is sought on observed node
}
\details{
Function is designed for process tracing; it can be applied to a posterior distribution however though currently data probabilities using parameters only.
}
\examples{
model <- make_model("X->Y")
model <- set_parameters(model, type = "flat")
conditional_inferences(model, query = "Y[X=1]>Y[X=0]")

# Example of posteriors given monotonic X -> M -> Y model
model <- make_model("X-> M -> Y")  \%>\%
  set_restrictions(labels = list(M = "10", Y = "10"))
conditional_inferences(model, query = "Y[X=1]>Y[X=0]", given = "Y==1")

# Example on posteriors given monotonic X -> M -> Y model
model <- make_model("X-> M -> Y")  \%>\%
  set_restrictions(labels = list(M = "10", Y = "10")) \%>\%
  update_model(data.frame(X=0:1, Y = 0:1))
conditional_inferences(model, query = "Y[X=1]>Y[X=0]", given = "Y==1",
using = "posteriors")

# Running example
model <- make_model("S -> C -> Y <- R <- X; X -> C -> R") \%>\%
   set_restrictions(labels =
   list(C = "1110", R = "0001", Y = "0001"), keep = TRUE)
conditional_inferences(model, query = list(COE = "(Y[S=0] > Y[S=1])"),
given = "Y==1 & S==0")
}
